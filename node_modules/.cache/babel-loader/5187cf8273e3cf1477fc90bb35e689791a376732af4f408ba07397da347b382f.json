{"ast":null,"code":"var _jsxFileName = \"/Users/wingchiso/Downloads/01-starting-project 3 copy/src/components/SearchBar/SearchBar.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [appResult, setAppResult] = useState([]);\n  useEffect(() => {\n    const fetchData = userInput => {\n      if (userInput.trim() === \"\") {\n        setData([]);\n        return;\n      } else {\n        fetch(`https://itunes.apple.com/hk/search?term=${userInput}&entity=software`).then(response => response.json()).then(responseData => {\n          setData(responseData);\n          const appItems = responseData.results.map(item => ({\n            name: item.trackName,\n            icon: item.artworkUrl100,\n            author: item.artistName,\n            category: item.genres[0],\n            description: item.description\n          }));\n          setAppResult(appItems);\n        });\n      }\n    };\n    fetchData(input); // Call fetchData here with input as a dependency\n  }, [input]); // Specify input as a dependency for the useEffect\n\n  const submitHandler = event => {\n    event.preventDefault();\n  };\n  console.log(appResult);\n  const inputChangeHandler = userInput => {\n    setInput(userInput);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: event => inputChangeHandler(event.target.value),\n      type: \"text\",\n      placeholder: \"\\uD83D\\uDD0D  \\u641C\\u5C0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"vl95c3KgoxR97f5XHXhUdB+S58M=\");\n_c = SearchBar;\nexport default SearchBar;\n\n// import { useState, useEffect } from \"react\";\n// import \"./SearchBar.css\";\n\n// const SearchBar = () => {\n//   const [input, setInput] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   const fetchSuggestions = (query) => {\n//     if (query.trim() === \"\") {\n//       setSuggestions([]);\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Use the iTunes Search API to fetch suggestions\n//     fetch(`https://itunes.apple.com/hk/search?term=${query}&entity=software`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.results && data.results.length > 0) {\n//           // Extract app names from the API response\n//           const appNames = data.results.map((result) => result.trackName);\n//           setSuggestions(appNames);\n//         } else {\n//           setSuggestions([]);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         setSuggestions([]);\n//       })\n//       .finally(() => setLoading(false));\n//   };\n\n//   const inputChangeHandler = (value) => {\n//     setInput(value);\n//     fetchSuggestions(value);\n//   };\n\n//   return (\n//     <div className=\"search-bar\">\n//       <input\n//         value={input}\n//         onChange={(event) => inputChangeHandler(event.target.value)}\n//         type=\"text\"\n//         placeholder=\"🔍  搜尋\"\n//       />\n//       {loading && <p>Loading suggestions...</p>}\n//       <ul className=\"suggestions\">\n//         {suggestions.map((suggestion, index) => (\n//           <li key={index}>{suggestion}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","SearchBar","_s","input","setInput","data","setData","appResult","setAppResult","fetchData","userInput","trim","fetch","then","response","json","responseData","appItems","results","map","item","name","trackName","icon","artworkUrl100","author","artistName","category","genres","description","submitHandler","event","preventDefault","console","log","inputChangeHandler","className","children","value","onChange","target","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wingchiso/Downloads/01-starting-project 3 copy/src/components/SearchBar/SearchBar.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./SearchBar.css\";\n\nconst SearchBar = () => {\n  const [input, setInput] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [appResult, setAppResult] = useState([]);\n\n  useEffect(() => {\n    const fetchData = (userInput) => {\n      if (userInput.trim() === \"\") {\n        setData([]);\n        return;\n      } else {\n        fetch(\n          `https://itunes.apple.com/hk/search?term=${userInput}&entity=software`\n        )\n          .then((response) => response.json())\n          .then((responseData) => {\n            setData(responseData);\n\n            const appItems = responseData.results.map((item) => ({\n              name: item.trackName,\n              icon: item.artworkUrl100,\n              author: item.artistName,\n              category: item.genres[0],\n              description: item.description,\n            }));\n            setAppResult(appItems);\n          });\n      }\n    };\n\n    fetchData(input); // Call fetchData here with input as a dependency\n  }, [input]); // Specify input as a dependency for the useEffect\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n  };\n  console.log(appResult);\n\n  const inputChangeHandler = (userInput) => {\n    setInput(userInput);\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <input\n        value={input}\n        onChange={(event) => inputChangeHandler(event.target.value)}\n        type=\"text\"\n        placeholder=\"🔍  搜尋\"\n      />\n      {/* <ul>\n        {appResult.map((item, index) => (\n          <li key={index}>\n            <h3>{item.name}</h3>\n            <p>Category: {item.category}</p>\n            <p>Author:{item.author}</p>\n            <p>Description: {item.description}</p>\n          </li>\n        ))}\n      </ul> */}\n    </div>\n  );\n};\n\nexport default SearchBar;\n\n// import { useState, useEffect } from \"react\";\n// import \"./SearchBar.css\";\n\n// const SearchBar = () => {\n//   const [input, setInput] = useState(\"\");\n//   const [suggestions, setSuggestions] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   const fetchSuggestions = (query) => {\n//     if (query.trim() === \"\") {\n//       setSuggestions([]);\n//       return;\n//     }\n\n//     setLoading(true);\n\n//     // Use the iTunes Search API to fetch suggestions\n//     fetch(`https://itunes.apple.com/hk/search?term=${query}&entity=software`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         if (data.results && data.results.length > 0) {\n//           // Extract app names from the API response\n//           const appNames = data.results.map((result) => result.trackName);\n//           setSuggestions(appNames);\n//         } else {\n//           setSuggestions([]);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//         setSuggestions([]);\n//       })\n//       .finally(() => setLoading(false));\n//   };\n\n//   const inputChangeHandler = (value) => {\n//     setInput(value);\n//     fetchSuggestions(value);\n//   };\n\n//   return (\n//     <div className=\"search-bar\">\n//       <input\n//         value={input}\n//         onChange={(event) => inputChangeHandler(event.target.value)}\n//         type=\"text\"\n//         placeholder=\"🔍  搜尋\"\n//       />\n//       {loading && <p>Loading suggestions...</p>}\n//       <ul className=\"suggestions\">\n//         {suggestions.map((suggestion, index) => (\n//           <li key={index}>{suggestion}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default SearchBar;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAIC,SAAS,IAAK;MAC/B,IAAIA,SAAS,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC3BL,OAAO,CAAC,EAAE,CAAC;QACX;MACF,CAAC,MAAM;QACLM,KAAK,CACF,2CAA0CF,SAAU,kBACvD,CAAC,CACEG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,YAAY,IAAK;UACtBV,OAAO,CAACU,YAAY,CAAC;UAErB,MAAMC,QAAQ,GAAGD,YAAY,CAACE,OAAO,CAACC,GAAG,CAAEC,IAAI,KAAM;YACnDC,IAAI,EAAED,IAAI,CAACE,SAAS;YACpBC,IAAI,EAAEH,IAAI,CAACI,aAAa;YACxBC,MAAM,EAAEL,IAAI,CAACM,UAAU;YACvBC,QAAQ,EAAEP,IAAI,CAACQ,MAAM,CAAC,CAAC,CAAC;YACxBC,WAAW,EAAET,IAAI,CAACS;UACpB,CAAC,CAAC,CAAC;UACHrB,YAAY,CAACS,QAAQ,CAAC;QACxB,CAAC,CAAC;MACN;IACF,CAAC;IAEDR,SAAS,CAACN,KAAK,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAM2B,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,CAACC,GAAG,CAAC3B,SAAS,CAAC;EAEtB,MAAM4B,kBAAkB,GAAIzB,SAAS,IAAK;IACxCN,QAAQ,CAACM,SAAS,CAAC;EACrB,CAAC;EAED,oBACEV,OAAA;IAAKoC,SAAS,EAAC,YAAY;IAAAC,QAAA,eACzBrC,OAAA;MACEsC,KAAK,EAAEnC,KAAM;MACboC,QAAQ,EAAGR,KAAK,IAAKI,kBAAkB,CAACJ,KAAK,CAACS,MAAM,CAACF,KAAK,CAAE;MAC5DG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWC,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA9DID,SAAS;AAAA8C,EAAA,GAAT9C,SAAS;AAgEf,eAAeA,SAAS;;AAExB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}